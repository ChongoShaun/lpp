/*
  #Ribs
  ## Copyright Information
  Skeleton is Copyright 2011, Dave Gamache

  Ribs is the evolution of Skeleton by Nick Pack
  Free to use under the MIT license.
  http://github.com/nickpack/Ribs
*/
/*! normalize.css v2.1.3 | MIT License | git.io/normalize */
/* ==========================================================================
   HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined in IE 8/9.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
nav,
section,
summary {
  display: block; }

/**
 * Correct `inline-block` display not defined in IE 8/9.
 */
audio,
canvas,
video {
  display: inline-block; }

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Address `[hidden]` styling not present in IE 8/9.
 * Hide the `template` element in IE, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none; }

/* ==========================================================================
   Base
   ========================================================================== */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove default margin.
 */
body {
  margin: 0; }

/* ==========================================================================
   Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background: transparent; }

/**
 * Address `outline` inconsistency between Chrome and other browsers.
 */
a:focus {
  outline: thin dotted; }

/**
 * Improve readability when focused and also mouse hovered in all browsers.
 */
a:active,
a:hover {
  outline: 0; }

/* ==========================================================================
   Typography
   ========================================================================== */
/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari 5, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Address styling not present in IE 8/9, Safari 5, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted; }

/**
 * Address style set to `bolder` in Firefox 4+, Safari 5, and Chrome.
 */
b,
strong {
  font-weight: bold; }

/**
 * Address styling not present in Safari 5 and Chrome.
 */
dfn {
  font-style: italic; }

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0; }

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000; }

/**
 * Correct font family set oddly in Safari 5 and Chrome.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, serif;
  font-size: 1em; }

/**
 * Improve readability of pre-formatted text in all browsers.
 */
pre {
  white-space: pre-wrap; }

/**
 * Set consistent quote types.
 */
q {
  quotes: "\201C" "\201D" "\2018" "\2019"; }

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* ==========================================================================
   Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9.
 */
img {
  border: 0; }

/**
 * Correct overflow displayed oddly in IE 9.
 */
svg:not(:root) {
  overflow: hidden; }

/* ==========================================================================
   Figures
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari 5.
 */
figure {
  margin: 0; }

/* ==========================================================================
   Forms
   ========================================================================== */
/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct `color` not being inherited in IE 8/9.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * 1. Correct font family not being inherited in all browsers.
 * 2. Correct font size not being inherited in all browsers.
 * 3. Address margins set differently in Firefox 4+, Safari 5, and Chrome.
 */
button,
input,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 2 */
  margin: 0;
  /* 3 */ }

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
button,
input {
  line-height: normal; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Chrome, Safari 5+, and IE 8+.
 * Correct `select` style inheritance in Firefox 4+ and Opera.
 */
button,
select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"], input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default; }

/**
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * 1. Address `appearance` set to `searchfield` in Safari 5 and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari 5 and Chrome
 *    (include `-moz` to future-proof).
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  /* 2 */
  box-sizing: content-box; }

/**
 * Remove inner padding and search cancel button in Safari 5 and Chrome
 * on OS X.
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * 1. Remove default vertical scrollbar in IE 8/9.
 * 2. Improve readability and alignment in all browsers.
 */
textarea {
  overflow: auto;
  /* 1 */
  vertical-align: top;
  /* 2 */ }

/* ==========================================================================
   Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

/*
#Grid System

<div class="one column alpha">One</div>
<div class="fifteen columns omega">Fifteen</div>
<div class="three columns alpha">Three</div>
<div class="thirteen columns omega">Thirteen</div>
<div class="push-by-twelve four columns alpha omega">Four Pushed by Twelve</div>
<div class="seven columns alpha">Seven</div>
<div class="nine columns omega">Nine</div>
<div class="four columns alpha">Four</div>
<div class="twelve columns omega">Twelve</div>
<div class="five columns alpha">Five</div>
<div class="eleven columns omega">Eleven</div>
<div class="eight columns alpha">Eight</div>
<div class="eight columns omega">Eight</div>
<div class="six columns alpha">Six</div>
<div class="ten columns omega">Ten</div>
<div class="push-by-eight eight columns alpha omega">Eight Pushed by Eight</div>
<div class="three columns alpha">Three</div>
<div class="ten columns">Ten</div>
<div class="three columns omega">Three</div>
<div class="eleven columns alpha">Eleven</div>
<div class="five columns omega">Five</div>
*/
.container {
  position: relative;
  margin: 0 auto;
  padding: 0; }
  .container .alpha {
    margin-left: 0; }
  .container .omega {
    margin-right: 0; }

.column, .columns {
  float: left;
  margin-left: 10px;
  margin-right: 10px; }

.alpha-omega {
  margin-right: 0;
  margin-left: 0; }

.row {
  margin-bottom: 0; }

.container {
  width: 960px; }
  .container .one {
    width: 60px; }
  .container .two {
    width: 140px; }
  .container .three {
    width: 220px; }
  .container .four {
    width: 300px; }
  .container .five {
    width: 380px; }
  .container .six {
    width: 460px; }
  .container .seven {
    width: 540px; }
  .container .eight {
    width: 620px; }
  .container .nine {
    width: 700px; }
  .container .ten {
    width: 780px; }
  .container .eleven {
    width: 860px; }
  .container .twelve {
    width: 940px; }
  .container .thirteen {
    width: 1020px; }
  .container .fourteen {
    width: 1100px; }
  .container .fifteen {
    width: 1180px; }
  .container .sixteen {
    width: 1260px; }
  .container .one-third {
    width: 300px; }
  .container .two-thirds {
    width: 620px; }
  .container .one-half {
    width: 460px; }
  .container .one-quarter {
    width: 220px; }
  .container .three-quarters {
    width: 700px; }
  .container .offset-by-one {
    padding-left: 80px; }
  .container .offset-by-two {
    padding-left: 160px; }
  .container .offset-by-three {
    padding-left: 240px; }
  .container .offset-by-four {
    padding-left: 320px; }
  .container .offset-by-five {
    padding-left: 400px; }
  .container .offset-by-six {
    padding-left: 480px; }
  .container .offset-by-seven {
    padding-left: 560px; }
  .container .offset-by-eight {
    padding-left: 640px; }
  .container .offset-by-nine {
    padding-left: 720px; }
  .container .offset-by-ten {
    padding-left: 800px; }
  .container .offset-by-eleven {
    padding-left: 880px; }
  .container .offset-by-twelve {
    padding-left: 960px; }
  .container .offset-by-thirteen {
    padding-left: 1040px; }
  .container .offset-by-fourteen {
    padding-left: 1120px; }
  .container .offset-by-fifteen {
    padding-left: 1200px; }
  .container .pull-by-one {
    margin-left: -80px; }
  .container .pull-by-two {
    margin-left: -160px; }
  .container .pull-by-three {
    margin-left: -240px; }
  .container .pull-by-four {
    margin-left: -320px; }
  .container .pull-by-five {
    margin-left: -400px; }
  .container .pull-by-six {
    margin-left: -480px; }
  .container .pull-by-seven {
    margin-left: -560px; }
  .container .pull-by-eight {
    margin-left: -640px; }
  .container .pull-by-nine {
    margin-left: -720px; }
  .container .pull-by-ten {
    margin-left: -800px; }
  .container .pull-by-eleven {
    margin-left: -880px; }
  .container .pull-by-twelve {
    margin-left: -960px; }
  .container .pull-by-thirteen {
    margin-left: -1040px; }
  .container .pull-by-fourteen {
    margin-left: -1120px; }
  .container .pull-by-fifteen {
    margin-left: -1200px; }
  .container .push-by-one {
    margin-left: 80px; }
  .container .push-by-two {
    margin-left: 160px; }
  .container .push-by-three {
    margin-left: 240px; }
  .container .push-by-four {
    margin-left: 320px; }
  .container .push-by-five {
    margin-left: 400px; }
  .container .push-by-six {
    margin-left: 480px; }
  .container .push-by-seven {
    margin-left: 560px; }
  .container .push-by-eight {
    margin-left: 640px; }
  .container .push-by-nine {
    margin-left: 720px; }
  .container .push-by-ten {
    margin-left: 800px; }
  .container .push-by-eleven {
    margin-left: 880px; }
  .container .push-by-twelve {
    margin-left: 960px; }
  .container .push-by-thirteen {
    margin-left: 1040px; }
  .container .push-by-fourteen {
    margin-left: 1120px; }
  .container .push-by-fifteen {
    margin-left: 1200px; }

@media only screen and (max-width: 959px) {
  .container {
    width: 768px; }
    .container .one {
      width: 44px; }
    .container .two {
      width: 108px; }
    .container .three {
      width: 172px; }
    .container .four {
      width: 236px; }
    .container .five {
      width: 300px; }
    .container .six {
      width: 364px; }
    .container .seven {
      width: 428px; }
    .container .eight {
      width: 492px; }
    .container .nine {
      width: 556px; }
    .container .ten {
      width: 620px; }
    .container .eleven {
      width: 684px; }
    .container .twelve {
      width: 748px; }
    .container .thirteen {
      width: 812px; }
    .container .fourteen {
      width: 876px; }
    .container .fifteen {
      width: 940px; }
    .container .sixteen {
      width: 1004px; }
    .container .one-third {
      width: 236px; }
    .container .two-thirds {
      width: 492px; }
    .container .one-half {
      width: 364px; }
    .container .one-quarter {
      width: 172px; }
    .container .three-quarters {
      width: 556px; }
    .container .offset-by-one {
      padding-left: 64px; }
    .container .offset-by-two {
      padding-left: 128px; }
    .container .offset-by-three {
      padding-left: 192px; }
    .container .offset-by-four {
      padding-left: 256px; }
    .container .offset-by-five {
      padding-left: 320px; }
    .container .offset-by-six {
      padding-left: 384px; }
    .container .offset-by-seven {
      padding-left: 448px; }
    .container .offset-by-eight {
      padding-left: 512px; }
    .container .offset-by-nine {
      padding-left: 576px; }
    .container .offset-by-ten {
      padding-left: 640px; }
    .container .offset-by-eleven {
      padding-left: 704px; }
    .container .offset-by-twelve {
      padding-left: 768px; }
    .container .offset-by-thirteen {
      padding-left: 832px; }
    .container .offset-by-fourteen {
      padding-left: 896px; }
    .container .offset-by-fifteen {
      padding-left: 960px; }
    .container .pull-by-one {
      margin-left: -64px; }
    .container .pull-by-two {
      margin-left: -128px; }
    .container .pull-by-three {
      margin-left: -192px; }
    .container .pull-by-four {
      margin-left: -256px; }
    .container .pull-by-five {
      margin-left: -320px; }
    .container .pull-by-six {
      margin-left: -384px; }
    .container .pull-by-seven {
      margin-left: -448px; }
    .container .pull-by-eight {
      margin-left: -512px; }
    .container .pull-by-nine {
      margin-left: -576px; }
    .container .pull-by-ten {
      margin-left: -640px; }
    .container .pull-by-eleven {
      margin-left: -704px; }
    .container .pull-by-twelve {
      margin-left: -768px; }
    .container .pull-by-thirteen {
      margin-left: -832px; }
    .container .pull-by-fourteen {
      margin-left: -896px; }
    .container .pull-by-fifteen {
      margin-left: -960px; }
    .container .push-by-one {
      margin-left: 64px; }
    .container .push-by-two {
      margin-left: 128px; }
    .container .push-by-three {
      margin-left: 192px; }
    .container .push-by-four {
      margin-left: 256px; }
    .container .push-by-five {
      margin-left: 320px; }
    .container .push-by-six {
      margin-left: 384px; }
    .container .push-by-seven {
      margin-left: 448px; }
    .container .push-by-eight {
      margin-left: 512px; }
    .container .push-by-nine {
      margin-left: 576px; }
    .container .push-by-ten {
      margin-left: 640px; }
    .container .push-by-eleven {
      margin-left: 704px; }
    .container .push-by-twelve {
      margin-left: 768px; }
    .container .push-by-thirteen {
      margin-left: 832px; }
    .container .push-by-fourteen {
      margin-left: 896px; }
    .container .push-by-fifteen {
      margin-left: 960px; }
  .container {
    width: 768px; } }

/*
  #Mobile Grid
  Every column element in this grid is the total grid width
*/
@media only screen and (max-width: 767px) {
  .container {
    width: 90%; }
    .container .one,
    .container .two,
    .container .three,
    .container .four,
    .container .five,
    .container .six,
    .container .seven,
    .container .eight,
    .container .nine,
    .container .ten,
    .container .eleven,
    .container .twelve,
    .container .thirteen,
    .container .fourteen,
    .container .fifteen,
    .container .sixteen,
    .container .one-third,
    .container .two-thirds,
    .container .one-half,
    .container .one-quarter,
    .container .three-quarters {
      width: 100%; }
    .container .column, .container .columns {
      margin: 0; }
    .container .offset-by-one,
    .container .offset-by-two,
    .container .offset-by-three,
    .container .offset-by-four,
    .container .offset-by-five,
    .container .offset-by-six,
    .container .offset-by-seven,
    .container .offset-by-eight,
    .container .offset-by-nine,
    .container .offset-by-ten,
    .container .offset-by-eleven,
    .container .offset-by-twelve,
    .container .offset-by-thirteen,
    .container .offset-by-fourteen,
    .container .offset-by-fifteen {
      padding-left: 0; } }

/*
  ##Auto-applied clearfix for .container elements

  ```<div class="container">
    This element has clearfix applied in browsers that support the :after css selector
  </div>```
*/
.container:after {
  content: "\0020";
  display: block;
  height: 0;
  clear: both;
  visibility: hidden; }

/*
 ##General use clearfix class
 ```<div class="clearfix">This haz clearfix</div>```
 Use this clearfix class on parent to clear nested columns, or:
 wrap each row of columns in a ```<div class="row">...</div>```
*/
.clearfix:before,
.clearfix:after,
.row:before,
.row:after {
  content: '\0020';
  display: block;
  overflow: hidden;
  visibility: hidden;
  width: 0;
  height: 0; }

/*
  ##Auto-applied clearfix for .row elements

  ```<div class="row">
    This element has clearfix applied in browsers that support the :after css selector
  </div>```
*/
.row:after,
.clearfix:after {
  clear: both; }

.row, .clearfix {
  zoom: 1; }

/*
  ##Block level clear
  You can also use a ```<br class="clear">``` to clear columns
*/
.clear {
  clear: both;
  display: block;
  overflow: hidden;
  visibility: hidden;
  width: 0;
  height: 0; }

h1 a, h2 a, h3 a, h4 a, h5 a, h6 a {
  font-weight: inherit; }

h1 {
  color: #181818;
  font-family: Arial, sans-serif;
  font-weight: normal;
  font-size: 46px;
  line-height: 69px;
  margin: 0 0 14px 0; }

h2 {
  color: #181818;
  font-family: Arial, sans-serif;
  font-weight: normal;
  font-size: 35px;
  line-height: 52.5px;
  margin: 0 0 10px 0; }

h3 {
  color: #181818;
  font-family: Arial, sans-serif;
  font-weight: normal;
  font-size: 28px;
  line-height: 42px;
  margin: 0 0 8px 0; }

h4 {
  color: #181818;
  font-family: Arial, sans-serif;
  font-weight: normal;
  font-size: 21px;
  line-height: 31.5px;
  margin: 0 0 4px 0; }

h5 {
  color: #181818;
  font-family: Arial, sans-serif;
  font-weight: normal;
  font-size: 17px;
  line-height: 25.5px; }

h6 {
  color: #181818;
  font-family: Arial, sans-serif;
  font-weight: normal;
  font-size: 14px;
  line-height: 21px; }

.subheader {
  color: #777; }

p {
  margin: 0 0 20px 0;
  line-height: 24px; }

p img {
  margin: 0; }

.lead {
  font-size: 21px;
  line-height: 31.5px;
  color: #777; }

em {
  font-style: italic; }

strong {
  font-weight: bold;
  color: #333; }

small {
  font-size: 80%; }

blockquote, blockquote p {
  font-size: 17px;
  line-height: 24px;
  color: #777;
  font-style: italic; }

blockquote {
  margin: 0 0 20px;
  padding: 9px 20px 0 19px;
  border-left: 1px solid #ddd; }

blockquote cite {
  display: block;
  font-size: 12px;
  color: #555; }

blockquote cite:before {
  content: "\2014 \0020"; }

blockquote cite a, blockquote cite a:visited, blockquote cite a:visited {
  color: #555; }

a, a:visited {
  color: #333;
  text-decoration: underline; }

a:hover, a:focus {
  color: #000;
  text-decoration: none;
  outline: 0; }

p a, p a:visited {
  line-height: inherit; }

ul, ol {
  margin: 0 0 20px 0; }

ul {
  list-style: none outside; }

ol {
  list-style: decimal; }

ol, ul.square, ul.circle, ul.disc {
  margin: 0 0 0 10px; }

ul.square {
  list-style: square outside; }

ul.circle {
  list-style: circle outside; }

ul.disc {
  list-style: disc outside; }

ul ul, ul ol,
ol ol, ol ul {
  margin: 4px 0 5px 30px;
  font-size: 90%; }

li {
  line-height: 18px;
  margin: 0 0 12px 0; }

.large li {
  line-height: 21px; }

li p {
  line-height: 21px; }

.button,
button,
input[type="submit"],
input[type="reset"],
input[type="button"] {
  background-color: #CCC;
  background-color: rgba(153, 153, 153, 0.2);
  background-image: -webkit-gradient(linear, 0 0, 0 100%, from(rgba(255, 255, 255, 0.2)), to(rgba(0, 0, 0, 0.2)));
  background-image: -webkit-linear-gradient(top, rgba(255, 255, 255, 0.2), rgba(0, 0, 0, 0.2));
  background-image: linear-gradient(to bottom, rgba(255, 255, 255, 0.2), rgba(0, 0, 0, 0.2));
  background-repeat: repeat-x;
  border: 1px solid #aaa;
  border-top: 1px solid #ccc;
  border-left: 1px solid #ccc;
  border-radius: 3px;
  color: #444;
  display: inline-block;
  font-size: 11px;
  font-weight: bold;
  text-decoration: none;
  text-shadow: 0 1px rgba(255, 255, 255, 0.75);
  cursor: pointer;
  margin: 0 0 20px 0;
  line-height: normal;
  padding: 8px 10px;
  font-family: Arial, sans-serif; }

.button:hover,
button:hover,
input[type="submit"]:hover,
input[type="reset"]:hover,
input[type="button"]:hover {
  background-color: #CCC;
  background-color: rgba(153, 153, 153, 0.3);
  background-image: -webkit-gradient(linear, 0 0, 0 100%, from(rgba(255, 255, 255, 0.3)), to(rgba(0, 0, 0, 0.3)));
  background-image: -webkit-linear-gradient(top, rgba(255, 255, 255, 0.3), rgba(0, 0, 0, 0.3));
  background-image: linear-gradient(to bottom, rgba(255, 255, 255, 0.3), rgba(0, 0, 0, 0.3));
  background-repeat: repeat-x;
  color: #222;
  border: 1px solid #888;
  border-top: 1px solid #aaa;
  border-left: 1px solid #aaa; }

.button:active,
button:active,
input[type="submit"]:active,
input[type="reset"]:active,
input[type="button"]:active {
  background-color: #CCC;
  background-color: rgba(153, 153, 153, 0.2);
  background-image: -webkit-gradient(linear, 0 0, 0 100%, from(rgba(255, 255, 255, 0.2)), to(rgba(0, 0, 0, 0.2)));
  background-image: -webkit-linear-gradient(top, rgba(255, 255, 255, 0.2), rgba(0, 0, 0, 0.2));
  background-image: linear-gradient(to bottom, rgba(255, 255, 255, 0.2), rgba(0, 0, 0, 0.2));
  background-repeat: repeat-x;
  border: 1px solid #666; }

.button .full-width,
button.full-width,
input[type="submit"].full-width,
input[type="reset"].full-width,
input[type="button"].full-width {
  width: 100%;
  padding-left: 0;
  padding-right: 0;
  text-align: center; }

button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/*
  ##General margins (all sides)
  Applied to both form, and fieldset
*/
form {
  margin: 0 0 20px 0; }

fieldset {
  margin: 0 0 20px 0; }

/*
  ##Search/URL fields
  Make these behave as text fields
*/
input[type="search"],
input[type="url"] {
  -webkit-appearance: textfield;
  -moz-appearance: textfield; }

/*
  ##General form element styles, border etc.
  Applied to all except checkboxes
*/
input[type="text"],
input[type="password"],
input[type="email"],
input[type="search"],
input[type="url"],
input[type="number"],
input[type="tel"],
textarea,
select {
  border: 1px solid #ccc;
  padding: 6px 4px;
  border-radius: 2px;
  font: 13px Arial, sans-serif;
  color: #777;
  width: 210px;
  max-width: 100%;
  display: block;
  margin: 0 0 20px 0;
  background: #fff; }

/*
  ##Select boxes
  Padding and width applied from settings
*/
select {
  padding: 10px;
  width: 220px; }

/*
  ##Form element focus styles
  Applied to all except checkboxes and selects
*/
input[type="text"]:focus,
input[type="password"]:focus,
input[type="email"]:focus,
input[type="search"]:focus,
input[type="url"]:focus,
input[type="number"]:focus,
input[type="tel"]:focus,
textarea:focus {
  border: 1px solid #aaa;
  color: #444;
  outline: none;
  box-shadow: 0 0 3px 3px rgba(0, 0, 0, 0.2); }

textarea {
  min-height: 60px; }

label,
legend {
  display: block;
  font-weight: bold;
  font-size: 13px; }

input[type="checkbox"] {
  display: inline; }

/*
  ##Spans inside legends, or labels
  Alters font size, weight and color based on variables
*/
label span,
legend span {
  font-weight: normal;
  font-size: 13px;
  color: #444; }

/*
 ## Scale an image in line with the responsive grid
 ```
 <img src="foo.jpg" title="Scaling image of Foo" class="scale-with-grid">
 ```
*/
.scale-with-grid {
  max-width: 100%;
  height: auto; }

/*
##Basic table style

<table>
  <thead>
    <tr>
      <th>#</th>
      <th>First Name</th>
      <th>Last Name</th>
      <th>Username</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>1</td>
      <td>Nick</td>
      <td>Pack</td>
      <td>@nickpack</td>
    </tr>
  </tbody>
</table>
*/
table {
  max-width: 100%;
  background: #FFF;
  border-collapse: collapse;
  border-spacing: 0;
  width: 100%;
  margin: 10px 0; }
  table th,
  table td {
    padding: 8px;
    line-height: 21px;
    text-align: left;
    vertical-align: top;
    border-top: 1px solid #CCC; }
  table th {
    font-weight: bold; }
  table thead th {
    vertical-align: bottom; }
  table caption thead tr:first-child th,
  table caption thead tr:first-child td,
  table colgroup thead tr:first-child th,
  table colgroup thead tr:first-child td,
  table thead:first-child tr:first-child th,
  table thead:first-child tr:first-child td {
    border-top: 0; }
  table tbody tbody {
    border-top: 2px solid #CCC; }
  table table {
    background: #FFF; }

/*
##Condensed table style

<table class="table-condensed">
  <thead>
    <tr>
      <th>#</th>
      <th>First Name</th>
      <th>Last Name</th>
      <th>Username</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>1</td>
      <td>Nick</td>
      <td>Pack</td>
      <td>@nickpack</td>
    </tr>
  </tbody>
</table>
*/
.table-condensed th,
.table-condensed td {
  padding: 4px 5px; }

/*
##Bordered table style

<table class="table-bordered">
  <thead>
    <tr>
      <th>#</th>
      <th>First Name</th>
      <th>Last Name</th>
      <th>Username</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>1</td>
      <td>Nick</td>
      <td>Pack</td>
      <td>@nickpack</td>
    </tr>
  </tbody>
</table>
*/
.table-bordered {
  border: 1px solid #CCC;
  border-collapse: separate;
  border-left: 0;
  border-radius: 3px; }
  .table-bordered th,
  .table-bordered td {
    border-left: 1px solid #CCC; }
  .table-bordered caption thead tr:first-child th,
  .table-bordered caption tbody tr:first-child th,
  .table-bordered caption tbody tr:first-child td,
  .table-bordered colgroup thead tr:first-child th,
  .table-bordered colgroup tbody tr:first-child th,
  .table-bordered colgroup tbody tr:first-child td,
  .table-bordered thead:first-child tr:first-child th,
  .table-bordered tbody:first-child tr:first-child th,
  .table-bordered tbody:first-child tr:first-child td {
    border-top: 0; }
  .table-bordered thead:first-child tr:first-child > th:first-child,
  .table-bordered tbody:first-child tr:first-child > td:first-child,
  .table-bordered tbody:first-child tr:first-child > th:first-child {
    border-top-left-radius: 3px; }
  .table-bordered thead:first-child tr:first-child > th:last-child,
  .table-bordered tbody:first-child tr:first-child > td:last-child,
  .table-bordered tbody:first-child tr:first-child > th:last-child {
    border-top-right-radius: 3px; }
  .table-bordered thead:last-child tr:last-child > th:first-child,
  .table-bordered tbody:last-child tr:last-child > td:first-child,
  .table-bordered tbody:last-child tr:last-child > th:first-child,
  .table-bordered tfoot:last-child tr:last-child > td:first-child,
  .table-bordered tfoot:last-child tr:last-child > th:first-child {
    border-bottom-left-radius: 3px; }
  .table-bordered thead:last-child tr:last-child > th:last-child,
  .table-bordered tbody:last-child tr:last-child > td:last-child,
  .table-bordered tbody:last-child tr:last-child > th:last-child,
  .table-bordered tfoot:last-child tr:last-child > td:last-child,
  .table-bordered tfoot:last-child tr:last-child > th:last-child {
    border-bottom-right-radius: 3px; }
  .table-bordered tfoot tbody:last-child tr:last-child td:first-child {
    border-bottom-left-radius: 0; }
  .table-bordered tfoot tbody:last-child tr:last-child td:last-child {
    border-bottom-right-radius: 0; }
  .table-bordered caption thead tr:first-child th:first-child,
  .table-bordered caption tbody tr:first-child td:first-child,
  .table-bordered colgroup thead tr:first-child th:first-child,
  .table-bordered colgroup tbody tr:first-child td:first-child {
    border-top-left-radius: 3px; }
  .table-bordered caption thead tr:first-child th:last-child,
  .table-bordered caption tbody tr:first-child td:last-child,
  .table-bordered colgroup thead tr:first-child th:last-child,
  .table-bordered colgroup tbody tr:first-child td:last-child {
    border-top-right-radius: 3px; }

/*
##Striped table style

<table class="table-striped">
  <thead>
    <tr>
      <th>#</th>
      <th>First Name</th>
      <th>Last Name</th>
      <th>Username</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>1</td>
      <td>Nick</td>
      <td>Pack</td>
      <td>@nickpack</td>
    </tr>
  </tbody>
</table>
*/
.table-striped tbody > tr:nth-child(odd) > td,
.table-striped tbody > tr:nth-child(odd) > th {
  background-color: #EFEFEF; }

/*
##Hover table style

<table class="table-hover">
  <thead>
    <tr>
      <th>#</th>
      <th>First Name</th>
      <th>Last Name</th>
      <th>Username</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>1</td>
      <td>Nick</td>
      <td>Pack</td>
      <td>@nickpack</td>
    </tr>
  </tbody>
</table>
*/
.table-hover tbody tr:hover > td,
.table-hover tbody tr:hover > th {
  background-color: #999; }

body {
  background: #fff;
  font: 14px/21px Arial, sans-serif;
  color: #444;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%; }

hr {
  border: solid #ddd;
  border-width: 1px 0 0;
  clear: both;
  margin: 10px 0 30px;
  height: 0; }

/* Section Styles */
.dynamic-section .big-container {
  padding: 40px 0;
  background-color: #CCC;
  background-color: #cac2b1;
  background-image: -webkit-gradient(linear, 0 0, 0 100%, from(#bdb4a3), to(#ded6c6));
  background-image: -webkit-linear-gradient(top, #bdb4a3, #ded6c6);
  background-image: linear-gradient(to bottom, #bdb4a3, #ded6c6);
  background-repeat: repeat-x; }

.dynamic-section .first-section {
  background-color: #CCC;
  background-color: #cac2b1;
  background-image: -webkit-gradient(linear, 0 0, 0 100%, from(#bdb4a3), to(#ded6c6));
  background-image: -webkit-linear-gradient(top, #bdb4a3, #ded6c6);
  background-image: linear-gradient(to bottom, #bdb4a3, #ded6c6);
  background-repeat: repeat-x; }

/* Nav */
.nav {
  background-color: #fff; }

.menu {
  margin: 0; }
  .menu li {
    display: inline; }

#menu-utility-menu li {
  font-size: 14px; }

#menu-main-menu li {
  font-size: 18px; }

#secondary-navigation {
  background-color: #044366; }
  #secondary-navigation ul {
    margin: 0;
    padding: 0; }
  #secondary-navigation li {
    display: inline; }
  #secondary-navigation a {
    display: inline-block;
    padding: 30px 15px;
    color: #fff; }
    #secondary-navigation a:hover {
      background-color: #218bc3; }

/* Hero Styles */
.big-hero {
  height: 700px; }

.small-hero {
  height: 360px; }

/*# sourceMappingURL=data:application/json;base64, */